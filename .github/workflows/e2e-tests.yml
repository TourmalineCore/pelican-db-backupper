name: Run E2E tests

on: 
  push:
    branches:
      - test/*

jobs:
  # this is needed to wait for the new docker image to be build and published to the registry
  # so that we can use the image to run ui of the needed commit related version as part of local-env
  # the idea is taken from here https://stackoverflow.com/a/71489231
  push_to_registry:
    uses: ./.github/workflows/docker-build-and-push.yml
    # without this it cannot login to the registry
    secrets: inherit

  e2e_test:
    needs: push_to_registry
    name: Run E2E tests
    runs-on: ubuntu-22.04
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
          POSTGRES_DB: pelican_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install boto3
          sudo apt-get install -y postgresql-client-17

      # https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods
      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]\naws_access_key_id=admin\naws_secret_access_key=rootPassword" > ~/.aws/credentials

      - name: Start MinIO server
        run: |
          docker run -d -p 9000:9000 -p 9090:9090 --name minio \
            -e "MINIO_ROOT_USER=admin" \
            -e "MINIO_ROOT_PASSWORD=rootPassword" \
            minio/minio server /data --console-address ":9090"
          
          echo "Waiting for MinIO..."
          until curl -s http://localhost:9000/minio/health/live; do
            sleep 1
          done

      - name: Configure MinIO
        run: |
          docker exec minio mc alias set local http://localhost:9000 admin rootPassword
          docker exec minio mc mb local/pelican-backups
          sleep 5

      - name: Run tests
        env:
          DB_BACKUPS_FILENAME_PREFIX: pelican-local-env-db
          DATABASE_HOST: localhost
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: admin
          DATABASE_NAME: pelican_db
          DESTINATION_DB_AWS_ACCESS_KEY_ID: admin
          DESTINATION_DB_AWS_SECRET_ACCESS_KEY: rootPassword
          DESTINATION_DB_AWS_BUCKET_NAME: pelican-backups
          DESTINATION_DB_AWS_ENDPOINT: http://localhost:9000
          PGPASSWORD: admin
        run: |
          psql -h localhost -U postgres -d pelican_db -c "CREATE TABLE test_table (id serial PRIMARY KEY, data text);"
          psql -h localhost -U postgres -d pelican_db -c "INSERT INTO test_table (data) VALUES ('test data');"
          
          python pgsql-dump.py
          python e2e_test.py