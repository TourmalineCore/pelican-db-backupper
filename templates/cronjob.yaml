apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.extraConfigMapEnvVars.BACKUP_SCHEDULE }}"
  # How many completed jobs should be kept
  successfulJobsHistoryLimit: 1
  # We use concurrencyPolicy: Forbid to make sure that a new cronjob doesn't kill a previously started cronjob before it's completed
  # Here you can read about concurrencyPolicy: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#concurrency-policy
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: {{ .Release.Name }}
              image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
              resources:
                limits:
                  cpu: {{ .Values.resources.limits.cpu }}
                  memory: {{ .Values.resources.limits.memory }}
                requests:
                  cpu: {{ .Values.resources.requests.cpu }}
                  memory: {{ .Values.resources.requests.memory }}
              env:
                - name: DB_BACKUP_FILENAME_PREFIX
                  value: {{ .Values.extraConfigMapEnvVars.DB_BACKUP_FILENAME_PREFIX }}
                - name: DATABASE_HOST
                  value: {{ .Values.extraConfigMapEnvVars.DATABASE_HOST }}
                - name: PGPASSWORD
                  value: {{ .Values.extraConfigMapEnvVars.DATABASE_PASSWORD }}
                - name: DATABASE_USERNAME
                  value: {{ .Values.extraConfigMapEnvVars.DATABASE_USERNAME }}
                - name: DATABASE_NAME
                  value: {{ .Values.extraConfigMapEnvVars.DATABASE_NAME }}
                - name: BACKUP_AWS_ACCESS_KEY_ID
                  value: {{ .Values.extraConfigMapEnvVars.BACKUP_AWS_ACCESS_KEY_ID }}
                - name: BACKUP_AWS_ACCESS_SECRET_KEY
                  value: {{ .Values.extraConfigMapEnvVars.BACKUP_AWS_ACCESS_SECRET_KEY }}
                - name: BACKUP_AWS_BUCKET
                  value: {{ .Values.extraConfigMapEnvVars.BACKUP_AWS_BUCKET }}
                - name: BACKUP_AWS_ENDPOINT
                  value: {{ .Values.extraConfigMapEnvVars.BACKUP_AWS_ENDPOINT }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}